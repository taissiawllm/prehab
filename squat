pip install mediapipe opencv-python numpy

# basic squat analyzer code 

import cv2
import mediapipe as mp
import numpy as np
import math

# Initialize MediaPipe pose detector
mp_pose = mp.solutions.pose
pose = mp_pose.Pose(static_image_mode=True)
mp_drawing = mp.solutions.drawing_utils

# Load image
image = cv2.imread("squat.jpg")
image_rgb = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)

# Process image
results = pose.process(image_rgb)

if results.pose_landmarks:
    landmarks = results.pose_landmarks.landmark

    # Get coordinates of hip, knee, and ankle (Right leg)
    def get_point(idx):
        lm = landmarks[idx]
        return np.array([lm.x * image.shape[1], lm.y * image.shape[0]])

    hip = get_point(mp_pose.PoseLandmark.RIGHT_HIP.value)
    knee = get_point(mp_pose.PoseLandmark.RIGHT_KNEE.value)
    ankle = get_point(mp_pose.PoseLandmark.RIGHT_ANKLE.value)

    # Function to calculate angle
    def calculate_angle(a, b, c):
        ba = a - b
        bc = c - b
        cosine_angle = np.dot(ba, bc) / (np.linalg.norm(ba) * np.linalg.norm(bc))
        angle = np.arccos(cosine_angle)
        return np.degrees(angle)

    knee_angle = calculate_angle(hip, knee, ankle)
    feedback = "Good squat!" if knee_angle < 100 else "Go deeper!"

    # Draw pose and angle text
    mp_drawing.draw_landmarks(image, results.pose_landmarks, mp_pose.POSE_CONNECTIONS)
    cv2.putText(image, f"Knee Angle: {int(knee_angle)}", tuple(knee.astype(int)), 
                cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 0), 2)
    cv2.putText(image, feedback, (50, 50), 
                cv2.FONT_HERSHEY_SIMPLEX, 1.2, (0, 0, 255), 3)

# Show the result
cv2.imshow("Squat Analyzer", image)
cv2.waitKey(0)
cv2.destroyAllWindows()
